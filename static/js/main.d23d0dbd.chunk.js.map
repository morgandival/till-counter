{"version":3,"sources":["components/Header.tsx","components/TillCounter.tsx","App.tsx","index.tsx"],"names":["Header","props","className","title","TillCounter","React","useState","denoms","setDenoms","total","setTotal","handleChange","event","denom","target","id","value","parseFloat","index","findIndex","x","slice","handleBlur","length","sum","map","a","reduce","b","outputs","forEach","regex","push","toFixed","type","step","min","pattern","defaultValue","onChange","onBlur","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAceA,MARf,SAAgBC,GACd,OACE,wBAAQC,UAAU,SAAlB,SACE,6BAAKD,EAAME,W,oBC6IFC,MAxIf,SAAqBH,GAAc,MAELI,IAAMC,SAAkB,IAFnB,mBAE1BC,EAF0B,KAElBC,EAFkB,OAGPH,IAAMC,SAAS,GAHR,mBAG1BG,EAH0B,KAGnBC,EAHmB,KAM3BC,EAAe,SAACC,GAEpB,IAAIC,EAAgBD,EAAME,OAAOC,GAC7BC,EAAgBC,WAAWL,EAAME,OAAOE,OAGtCE,EAAQX,EAAOY,WAAU,SAACC,GAAD,OAAOA,EAAEP,QAAUA,MAGnC,IAAXK,GAEFV,EAAU,GAAD,mBAAKD,GAAL,CAAa,CAAEM,QAAOG,YAI7BE,GAAS,GAEXV,EAAU,GAAD,mBACJD,EAAOc,MAAM,EAAGH,IADZ,CAEP,CAAEL,QAAOG,UAFF,YAGJT,EAAOc,MAAMH,EAAQ,OAMxBI,EAAa,SAACV,GAElB,GAAIL,EAAOgB,OAAS,EAAG,CAErB,IAAMC,EAAcjB,EACjBkB,KAAI,SAACC,GAAD,OAAOA,EAAEV,SACbW,QAAO,SAAUD,EAAGE,GACnB,OAAOF,EAAIE,KAIflB,EAASc,KAKPK,EAAe,GA2ErB,OAxEA5B,EAAMM,OAAOuB,SAAQ,SAAUd,GAE7B,IAAIe,EAAgB,GAGpB,OAAQf,GAEN,KAAK,IACHe,EAAQ,0BACR,MAEF,KAAK,GACHA,EAAQ,8BACR,MAEF,KAAK,GACHA,EAAQ,iCACR,MAEF,KAAK,GACHA,EAAQ,mBACR,MAEF,KAAK,EACHA,EAAQ,oBACR,MAEF,KAAK,EACHA,EAAQ,uBACR,MAEF,KAAK,EACHA,EAAQ,gBACR,MAEF,IAAK,GACHA,EAAQ,iBACR,MAEF,IAAK,GACHA,EAAQ,oBACR,MAEF,IAAK,GACHA,EAAQ,kBACR,MAEF,IAAK,IACHA,EAAQ,mBAKZF,EAAQG,KACN,sBAAK9B,UAAU,eAAf,UACE,wBAAOA,UAAU,cAAjB,cAAiCc,EAAMiB,QAAQ,MAC/C,uBACElB,GAAI,SAAWC,EACfkB,KAAK,OACLhC,UAAU,cACViC,KAAMnB,EACNoB,IAAI,IACJC,QAASN,EACTO,aAAa,OACbC,SAAU5B,EACV6B,OAAQlB,IAEV,uBAAOpB,UAAU,cAAjB,sBAMJ,sBAAKA,UAAU,cAAf,UACG2B,EACD,uBACA,qBAAK3B,UAAU,QAAf,SACE,8BACE,uCADF,IACgB,uBAAMA,UAAU,aAAhB,cAA+BO,EAAMwB,QAAQ,eCjItDQ,MATf,WACE,OACE,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,MAAM,iBACd,cAAC,EAAD,CAAaI,OAAQ,CAAC,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAK,GAAK,GAAK,WCJrEmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d23d0dbd.chunk.js","sourcesContent":["import \"./Header.css\";\n\ntype Props = {\n  title: string;\n};\n\nfunction Header(props: Props) {\n  return (\n    <header className=\"header\">\n      <h1>{props.title}</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\r\nimport \"./TillCounter.css\";\r\n\r\n// Declare Props type\r\ntype Props = {\r\n  denoms: Array<number>;\r\n};\r\n\r\ninterface Denom {\r\n  denom: string;\r\n  value: number;\r\n}\r\n\r\n// Main function\r\nfunction TillCounter(props: Props) {\r\n  // state initialisation\r\n  const [denoms, setDenoms] = React.useState<Denom[]>([]);\r\n  const [total, setTotal] = React.useState(0);\r\n\r\n  // Handles what happens when the input field value is altered\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    // Extract input ID and value\r\n    let denom: string = event.target.id;\r\n    let value: number = parseFloat(event.target.value);\r\n\r\n    // Grab index of denom if it exists in the denoms array\r\n    const index = denoms.findIndex((x) => x.denom === denom);\r\n\r\n    // If index does not exist...\r\n    if (index === -1) {\r\n      // Push new denom and value to end of denoms array\r\n      setDenoms([...denoms, { denom, value }]);\r\n    }\r\n\r\n    // If index exists...\r\n    if (index > -1) {\r\n      // Update values of specific index\r\n      setDenoms([\r\n        ...denoms.slice(0, index),\r\n        { denom, value },\r\n        ...denoms.slice(index + 1),\r\n      ]);\r\n    }\r\n  };\r\n\r\n  // Handles what happens when the input field is left\r\n  const handleBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    // Check to see if there are array items to add together\r\n    if (denoms.length > 0) {\r\n      // Add denom values up\r\n      const sum: number = denoms\r\n        .map((a) => a.value)\r\n        .reduce(function (a, b) {\r\n          return a + b;\r\n        });\r\n\r\n      // Push to usestate\r\n      setTotal(sum);\r\n    }\r\n  };\r\n\r\n  // initialise denominations output array\r\n  const outputs: any = [];\r\n\r\n  // fill outputs array\r\n  props.denoms.forEach(function (value) {\r\n    // initialise regex string\r\n    let regex: string = \"\";\r\n\r\n    // check denomination against entered value to assign regex pattern for validation\r\n    switch (value) {\r\n      // $100\r\n      case 100:\r\n        regex = \"([0-9]*[0]{2}|0).[0]{2}\";\r\n        break;\r\n      // $50\r\n      case 50:\r\n        regex = \"([0-9]*[05]{1}[0]|0).[0]{2}\";\r\n        break;\r\n      // $20\r\n      case 20:\r\n        regex = \"([0-9]*[02468]{1}[0]|0).[0]{2}\";\r\n        break;\r\n      // $10\r\n      case 10:\r\n        regex = \"[0-9]*[0].[0]{2}\";\r\n        break;\r\n      // $5\r\n      case 5:\r\n        regex = \"[0-9]*[05].[0]{2}\";\r\n        break;\r\n      // $2\r\n      case 2:\r\n        regex = \"[0-9]*[02468].[0]{2}\";\r\n        break;\r\n      // $1\r\n      case 1:\r\n        regex = \"[0-9]+.[0]{2}\";\r\n        break;\r\n      // $0.50\r\n      case 0.5:\r\n        regex = \"[0-9]+.[05][0]\";\r\n        break;\r\n      // $0.20\r\n      case 0.2:\r\n        regex = \"[0-9]+.[02468][0]\";\r\n        break;\r\n      // $0.10\r\n      case 0.1:\r\n        regex = \"[0-9]+.[0-9][0]\";\r\n        break;\r\n      // $0.05\r\n      case 0.05:\r\n        regex = \"[0-9]+.[0-9][05]\";\r\n        break;\r\n    }\r\n\r\n    // add elements to array\r\n    outputs.push(\r\n      <div className=\"denomination\">\r\n        <label className=\"denom-label\">${value.toFixed(2)}</label>\r\n        <input\r\n          id={\"denom-\" + value}\r\n          type=\"text\"\r\n          className=\"denom-input\"\r\n          step={value}\r\n          min=\"0\"\r\n          pattern={regex}\r\n          defaultValue=\"0.00\"\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n        ></input>\r\n        <label className=\"denom-count\">0</label>\r\n      </div>,\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"tillcounter\">\r\n      {outputs}\r\n      <hr />\r\n      <div className=\"total\">\r\n        <p>\r\n          <b>Total:</b> <span className=\"total-span\">${total.toFixed(2)}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TillCounter;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport TillCounter from \"./components/TillCounter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Till Counter\" />\n      <TillCounter denoms={[100, 50, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05]} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}